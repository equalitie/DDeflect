---
- name: Configure user SSL certs
  template: src=ssl_multicert.config.j2 dest=/etc/trafficserver/ssl_multicert.config owner={{trafficserver_user}} group={{trafficserver_group}}
  tags: ats

- name: Make SSL directory
  file: dest=/etc/trafficserver/ssl state=directory owner={{trafficserver_user}} group={{trafficserver_group}}

- debug: msg="ssl cert is {{item.value.ssl_cert}}"
  with_dict: remap
  when: item.value.https == True

- name: Install user certs
  synchronize: src={{item.value.ssl_cert}} dest=/etc/trafficserver/ssl/ #owner={{trafficserver_user}} group={{trafficserver_group}}
  with_dict: remap
  when: item.value.https == True

- file: dest=/etc/trafficserver/ssl/{{item.value.ssl_cert}} owner={{trafficserver_user}} group={{trafficserver_group}} mode=700
  with_dict: remap
  when: item.value.https == True

- name: Install user keys
  synchronize: src={{item.value.ssl_key}} dest=/etc/trafficserver/ssl/{{item.value.ssl_key}} #owner={{trafficserver_user}} group={{trafficserver_group}}
  with_dict: remap
  when: item.value.https == True

- file: dest=/etc/trafficserver/ssl/{{item.value.ssl_key}} owner={{trafficserver_user}} group={{trafficserver_group}} mode=700
  with_dict: remap
  when: item.value.https == True

- name: Install user CA bundles
  synchronize: src={{item.value.ssl_ca}} dest=/etc/trafficserver/ssl/{{item.value.ssl_ca}}
  with_dict: remap
  when: item.value.https == True and "ssl_ca" in item.value

- file: dest=/etc/trafficserver/ssl/{{item.value.ssl_ca}} owner={{trafficserver_user}} group={{trafficserver_group}} mode=700
  with_dict: remap
  when: item.value.https == True
